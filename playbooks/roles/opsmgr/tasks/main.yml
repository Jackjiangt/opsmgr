---

# install pre-reqs

- name: installs prereq packages with aptitude
  apt: name={{ item }} state=present update_cache=true
  with_items: "{{ apt_packages }}"

- name: installs prereq packages with pip
  pip: name={{ item }}
  with_items: "{{ pip_packages }}"

# copy the code to server

- name: create tmp director for the code
  file:
    path: "{{ tmp_install_directory }}"
    state: directory
    mode: 0700

- name: copy code to server
  copy:
    src: "{{ playbook_dir }}/.."
    dest: "{{ tmp_install_directory }}"

# opstmgr python package integration

- name: install opsmgr modules
  command: python setup.py install
  args:
    chdir: "{{ tmp_install_directory }}/{{ item }}"
  with_items: "{{ opsmgr_modules }}"
  notify: restart apache

# drop enabled files for horizon
- name: find the enabled directory
#  shell: find / -type d -print0 2> /dev/null | grep -FzZ '/site-packages/openstack_dashboard/local/enabled'
  shell: echo /openstack/venvs/horizon-13.1.0/lib/python2.7/site-packages/openstack_dashboard/local
  register: enabled_directory

- name: Copy the ui files into the enabled directory
  copy:
    src: "{{ playbook_dir }}/../horizon/enabled"
    dest: "{{ enabled_directory.stdout }}"
  notify: restart apache

# Create /etc/opsmgr and /var/log/opsmgr
- name: Create /etc/opsmgr
  file:
    path: "/etc/opsmgr"
    state: directory
    mode: 0755

- name: Create /etc/opsmgr/logging.yaml
  template:
    src: logging.yaml.j2
    dest: /etc/opsmgr/logging.yaml

- name: Generate a random passpharse to encrypt the passwords in the db with
  shell: python -c "import base64;import os;print(str(base64.b64encode(os.urandom(32))))"
  register: random_passphrase  

- name: Create /etc/opsmgr/opsmgr.conf
  template:
    src: opsmgr.conf.j2
    dest: /etc/opsmgr/opsmgr.conf
    force: no

- name: Create /var/log/opsmgr
  file:
    path: "/var/log/opsmgr/"
    state: directory
    mode: 0777

# Create the database
- name: Create DB for service
  mysql_db:
    login_user: "{{ db_login_user }}"
    login_password: "{{ db_login_password }}"
    login_host: "{{ db_login_host }}"
    name: "{{ db_name }}"
    state: "present"

- name: Grant access to the DB for the service
  mysql_user:
    login_user: "{{ db_login_user }}"
    login_password: "{{ db_login_password }}"
    login_host: "{{ db_login_host }}"
    name: "{{ db_user }}"
    password: "{{ db_password }}"
    host: "{{ item }}"
    state: "present"
    priv: "{{ db_name }}.*:ALL"
  with_items:
    - "localhost"
    - "%"

- name: Creae the database tables
  command: opsmgr-admin db_sync

# Create the default rack
- name: Create the default rack
  command: opsmgr add_rack -l default
  ignore_errors: yes # rack might already exist

# remove the code after it is installed

- name: Remove tmp directory for the code
  file:
    path: "{{ tmp_install_directory }}"
    state: absent

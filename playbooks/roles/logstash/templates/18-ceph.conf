filter {
  if "ceph" in [tags] and [message] =~ /.+/  {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:date} %{NOTSPACE:osd_epoch} ?%{SPACE}?%{NOTSPACE:error_bool} %{GREEDYDATA:logmessage}" }
    }
    if "leader" in [logmessage] and "handle_command" not in [logmessage] {
       grok {
       	  match => { "logmessage" => "%{NUMBER:avail_percent:int}\% total %{NUMBER:total_space:int} %{WORD:total_units}, used %{NUMBER:used_space:int} %{WORD:used_units}, avail %{NUMBER:avail_space:int} %{WORD:avail_units}" }
       } 
       ruby {
         code => 'event["percent_used"] = 100 - event["avail_percent"]
            if event["total_units"] == "TB"
              event["total_space"] = event["total_space"] * 1024 * 1024
                event["total_units"] = "MB"
            end
            if event["used_units"] == "TB"
               event["used_space"] = event["used_space"] * 1024 * 1024
               event["used_units"] = "MB"
            end
            if event["avail_units"] == "TB"
               event["avail_space"] = event["avail_space"] * 1024 * 1024
               event["avail_units"] = "MB"
            end
            if event["total_units"] == "GB"
              event["total_space"] = event["total_space"] * 1024
                event["total_units"] = "MB"
            end
            if event["used_units"] == "GB"
               event["used_space"] = event["used_space"] * 1024
               event["used_units"] = "MB"
            end
            if event["avail_units"] == "GB"
               event["avail_space"] = event["avail_space"] * 1024
               event["avail_units"] = "MB"
            end
            if event["avail_units"] == "kB"
               event["avail_space"] = event["avail_space"] / 1024
               event["avail_units"] = "MB"
            end
            if event["used_units"] == "kB"
               event["used_space"] = event["used_space"] / 1024
               event["used_units"] = "MB"
            end'
       }
    }

    if "cluster" in [logmessage] and "B/s rd" in [logmessage] and "B/s wr" not in [logmessage]{
       grok {
          match => { "logmessage" => "%{NUMBER:pgmap} \pgs: %{NOTSPACE:active_clean} %{NOTSPACE:active_msg} %{NUMBER:bytes_data} %{NOTSPACE:bytes_unit} data, %{NUMBER:bytes_used} %{NOTSPACE:used_unit} used, %{NUMBER:bytes_avail} %{NOTSPACE:avail_unit} / %{NUMBER:total_avail} %{NOTSPACE:total_unit} avail; %{NUMBER:bytes_read:int} %{NOTSPACE:read_unit} rd, %{NUMBER:ops_per_sec:int} op/s" }
       }
       ruby {
         code => '
            if event["read_unit"] == "kB/s"
               event["bytes_read"] = event["bytes_read"] * 1024
               event["read_unit"] = "B/s"
            end       
            if event["read_unit"] == "MB/s"
               event["bytes_read"] = event["bytes_read"] * 1024 * 1024
               event["read_unit"] = "B/s"
            end'
       }
       mutate {
            remove_field => [ "pgmap", "active_clean", "active_msg" ]
       }
    }
     
    if "cluster" in [logmessage] and "B/s rd" in [logmessage] and "B/s wr" in [logmessage] {
       grok {
          match => { "logmessage" => "%{NUMBER:pgmap} \pgs: %{NOTSPACE:active_clean} %{NOTSPACE:active_msg} %{NUMBER:bytes_data} %{NOTSPACE:bytes_unit} data, %{NUMBER:bytes_used} %{NOTSPACE:used_unit} used, %{NUMBER:bytes_avail} %{NOTSPACE:avail_unit} / %{NUMBER:total_avail} %{NOTSPACE:total_unit} avail; %{NUMBER:bytes_read:int} %{NOTSPACE:read_unit} rd, %{NUMBER:bytes_written:int} %{NOTSPACE:written_unit} wr, %{NUMBER:ops_per_sec:int} op/s" }
       }
       ruby {
         code => '
            if event["read_unit"] == "kB/s"
               event["bytes_read"] = event["bytes_read"] * 1024
               event["read_unit"] = "B/s"
            end
            if event["read_unit"] == "MB/s"
               event["bytes_read"] = event["bytes_read"] * 1024 * 1024
               event["read_unit"] = "B/s"
            end
            if event["written_unit"] == "kB/s"
               event["bytes_written"] = event["bytes_written"] * 1024
               event["written_unit"] = "B/s"
            end
            if event["written_unit"] == "MB/s"
               event["bytes_written"] = event["bytes_written"] * 1024 * 1024
               event["written_unit"] = "B/s"
            end'
       }
       mutate {
            remove_field => [ "pgmap", "active_clean", "active_msg" ]
       }
    }

    if "cluster" in [logmessage] and "B/s rd" not in [logmessage] and "B/s wr" in [logmessage] {
       grok {
          match => { "logmessage" => "%{NUMBER:pgmap} \pgs: %{NOTSPACE:active_clean} %{NOTSPACE:active_msg} %{NUMBER:bytes_data} %{NOTSPACE:bytes_unit} data, %{NUMBER:bytes_used} %{NOTSPACE:used_unit} used, %{NUMBER:bytes_avail} %{NOTSPACE:avail_unit} / %{NUMBER:total_avail} %{NOTSPACE:total_unit} avail; %{NUMBER:bytes_written:int} %{NOTSPACE:written_unit} wr, %{NUMBER:ops_per_sec:int} op/s" }
       }
       ruby {
         code => '
            if event["written_unit"] == "kB/s"
               event["bytes_written"] = event["bytes_written"] * 1024
               event["written_unit"] = "B/s"
            end
            if event["written_unit"] == "MB/s"
               event["bytes_written"] = event["bytes_written"] * 1024 * 1024
               event["written_unit"] = "B/s"
            end'
       }
       mutate {
            remove_field => [ "pgmap", "active_clean", "active_msg" ]
       }
    }
  }


  if "ceph-osd" in [tags] {
    grok {
      match => { "message" => "-- (?<src_host>(%{IPORHOST}\:%{POSINT}/%{POSINT})) (?:[<|>]){1,2} (?<dst_host>(%{IPORHOST}\:%{POSINT}/%{POSINT}))" }
    }
  }
}

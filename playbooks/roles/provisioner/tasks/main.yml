---
# Copyright 2016, IBM US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

    # sets up ssh keys and configuration
    
    - name: check if ssh keys should be imported
      become: yes
      stat:
          path: "{{ item }}"
      with_items:
        - "{{ provisioning_key_prv }}"
        - "{{ provisioning_key_pub }}"
      register: provisioning_keys
    
    - name: test if provisioning keys exist
      set_fact:
        use_existing_keys: "{{ provisioning_keys.results[0].stat.exists and provisioning_keys.results[1].stat.exists }}"
        
    - name: ensure keys/current directory exists
      file:
        path: "{{ opsmgr_lib }}/keys/current"
        state: directory
        mode: 0700
    
    - name: copy existing keys
      become: yes
      copy:
        src: "{{ item.0 }}"
        dest: "{{ opsmgr_lib }}/keys/current/{{ item.1 }}"
        mode: 0600
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        remote_src: true
      with_together:
        - [ "{{ provisioning_key_prv }}", "{{ provisioning_key_pub }}" ]
        - [ 'opsmgr.key', 'opsmgr.pub' ]
      when: use_existing_keys | bool == true
    
    - name: fallback to use opsmgr master key instead
      copy:
        src: "{{ opsmgr_lib }}/keys/master/{{ item }}"
        dest: "{{ opsmgr_lib }}/keys/current"
        mode: 0600
      with_items:
        - opsmgr.key
        - opsmgr.pub
      when: use_existing_keys | bool == false
    
    - name: ensure ~/.ssh exists
      file: path=~/.ssh state=directory

    - name: copy provisioning keys to ~/.ssh
      copy:
        src: "{{ opsmgr_lib }}/keys/current/{{ item.0 }}"
        dest: "~/.ssh/{{ item.1 }}"
        mode: 0600
        backup: yes
      with_together:
        - [ 'opsmgr.key', 'opsmgr.pub' ]
        - [ 'id_rsa',     'id_rsa.pub' ]
    
    # configure ssh proxy information

    - name: remove ~/.ssh/config.d directory if it exists
      file:
          path: ~/.ssh/config.d/
          state: absent

    - name: create ~/.ssh/config.d directory
      file:
          path: ~/.ssh/config.d/
          mode: 0700
          state: directory

    - name: create ssh config entries for hosts from extravars
      template:
          src: ssh.hst.j2
          dest: "~/.ssh/config.d/ssh.host-{{ item }}"
          mode: 0644
      with_items: "{{ ssh_hosts }}"
      when: ssh_hosts is defined

    - name: create ssh config entries for containers from extravars
      template:
          src: ssh.lxc.j2
          dest: "~/.ssh/config.d/ssh.lxc-{{ item.hostname }}"
          mode: 0644
      with_items: "{{ ssh_containers }}"
      when: ssh_containers is defined



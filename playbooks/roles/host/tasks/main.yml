---
# Copyright 2016, IBM US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

    # install pre-reqs on lxc host
    
    - name: installs prereq packages with aptitude
      apt: name={{ item }} state=present update_cache=true
      retries: 5
      delay: 2
      with_items: "{{ apt_packages }}"
    
    - name: installs prereq packages with pip
      pip: name={{ item }} state=present
      retries: 5
      delay: 2
      with_items: "{{ pip_packages }}"
    
    # provision opsmgr lxc containers
    
    - name: validate the shared directory on the host is created
      file: path={{ lxc_shared }} state=directory mode=0755
    
    - name: create containers
      lxc_container:
          name: "{{ inventory_hostname }}-{{ item.name }}"
          template: ubuntu
          state: stopped
          template_options: --release {{ item.release }}
          container_command: |
              [[ ! -d "/{{ item.mount }}" ]] && mkdir -p "/{{ item.mount }}"
          container_config:
              - "lxc.mount.entry = {{ lxc_shared }} {{ item.mount }} none rw,bind 0 0"
              - "lxc.aa_profile = unconfined"
      with_items: "{{ containers }}"

    - name: add static interface if static addressing
      template:
          src: interfaces.j2
          dest: "/var/lib/lxc/{{ inventory_hostname }}-{{ item.name }}/rootfs/etc/network/interfaces"
          mode: 0644
      with_items: "{{ containers }}"
      when: item.address is defined

    # configure lxc networking
    - include: lxcnet.yml
      when: create_lxc_network is defined and create_lxc_network == true
    
    - name: copy script to check on network
      copy:
        src: "{{ opsmgr_dir }}/scripts/waitip.sh"
        dest: "/var/lib/lxc/{{ inventory_hostname }}-{{ item.name }}/rootfs/waitip.sh"
        owner: root
        group: root
        mode: 0755
      with_items: "{{ containers }}"
    
    - name: start containers, fix permissions, wait until eth0 is up
      lxc_container:
        name: "{{ inventory_hostname }}-{{ item.name }}"
        state: started
        container_command: |
            /waitip.sh eth0
        container_config:
            - "lxc.start.auto = 1"
            - "lxc.start.delay = 0"
            - "lxc.group = onboot"
            - "lxc.group = opsmgr"
      with_items: "{{ containers }}"
      register: lxc_info

    - debug: var=lxc_info
      when: opsmgr_debug is defined and opsmgr_debug == true
    
    - name: wait for containers to be up
      wait_for:
          port: 22
          delay: 10
          connect_timeout: 30
          timeout: 300
          host: "{{ lxc_info | lxcaddress(item.name) }}"
          search_regex: OpenSSH
      with_items: "{{ containers }}"

    - name: install python on containers
      lxc_container:
        name: "{{ inventory_hostname }}-{{ item.name }}"
        container_command: |
            apt-get update && apt-get install -y --force-yes python && apt-get install -f
      with_items: "{{ containers }}"

    # dump container information

    - name: ensure the temporary directory exists
      become: no
      local_action: command
          mkdir -p {{ opsmgr_dat }}/{{ item }}
      with_items:
          - "lxc-ops"
          - "lxc-ext"

    - name: create shared file fragments for opsmgr-created containers
      become: no
      local_action: template
          src=lxc-ops.j2
          dest={{ opsmgr_dat }}/lxc-ops/lxc-{{ inventory_hostname }}-{{ item.name }}
      with_items: "{{ containers }}"

    - name: create shared file fragments for externally-created containers
      become: no
      local_action: template
          src=lxc-ext.j2
          dest={{ opsmgr_dat }}/lxc-ext/lxc-{{ inventory_hostname }}-{{ item.name }}
      with_items: "{{ import_containers }}"
      when: item.host == inventory_hostname


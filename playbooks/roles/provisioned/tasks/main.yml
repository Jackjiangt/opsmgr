---
# Copyright 2016, IBM US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

    # configure ssh connection parameters

    - name: remove Default requiretty settings
      lineinfile:
        dest: "/etc/sudoers"
        regexp: '^Defaults.*requiretty'
        state: absent
      vars:
        ansible_ssh_pipelining: no

    - name: ensure user exists
      user:
        name: "{{ provisioning_user_id }}"
        state: present

    - name: ensure .ssh directory exists
      file:
        path: "/home/{{ provisioning_user_id }}/.ssh"
        state: directory
        mode: 0700
        owner: "{{ provisioning_user_id }}"
        group: "{{ provisioning_user_id }}"

    - name: set up authorized_keys for the user
      authorized_key:
        user: "{{ provisioning_user_id }}"
        key: "{{ item }}"
        state: present
      with_file:
        - "~/.ssh/id_rsa.pub"

    - name: ensure sudoers.d directory exists
      file:
        path: /etc/sudoers.d
        owner: root
        group: root
        mode: 0755
        state: directory

    - name: ensure sudoers has include
      lineinfile:
        dest: /etc/sudoers
        line: "#includedir /etc/sudoers.d"
        state: present
        validate: "/usr/sbin/visudo -cf %s"

    - name: create sudoers include file
      template:
        src: sudoers.d.j2
        dest: "/etc/sudoers.d/{{ sudoers_filename }}"
        owner: root
        group: root
        mode: 0440
        validate: "/usr/sbin/visudo -cf %s"
      when: not sudoers_remove

    - name: remove sudoers based on variable
      file:
        path: "/etc/sudoers.d/{{ sudoers_filename }}"
        state: absent
      when: sudoers_remove



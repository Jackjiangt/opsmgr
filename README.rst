OpsMgr
=============

This project installs the OpsMgr command line and graphical user interface (as an OpenStack
Horizon extension) on the cluster controller nodes that have been deployed with os-services.
It also installs integrated OpsMgr plugin extensions: Nagios and ELK Stack (ElasticSearch,
Logstash and Kibana). Nagios is automatically configured to monitor the OpenStack services
running in the cluster. Kibana dashboards are provided to monitor the logs generated by
OpenStack and Ceph. In addition OpsMgr is fully extensible via plugins to support additional
open source DevOps tools (besides Nagios and ELK Stack) and additional types of resources.

In a typical Private Cloud scenario each node in the cluster is pre-conditioned by the
cluster-genesis project. The cluster-genesis project provides bare metal operating system
installation services, and then invokes a solution-specific service which, in this case,
is provided by the os-services project. This latter project guides the installation and
configuration of Openstack and then orchestrates the installation of the OpsMgr stack of
services for operational management.

A minimal-footprint configuration is possible whereby only those OpenStack services that
are required to support the OpsMgr graphical user interface are installed and configured.

The os-services orchestration of OpsMgr is achieved by setting the following variables::

   > export DEPLOY_OPSMGR=yes
   > export ANSIBLE_HOST_KEY_CHECKING=False
   > export KIBANA_PASSWORD=passw0rd
   > export OPSMGR_RECIPE=standard
     (for minimal-footprint OpenStack configuration)

And then running the following scripts::

   > ./scripts/bootstrap-opsmgr.sh
   > ./scripts/create-cluster-opsmgr.sh

The bootstrap-opsmgr.sh script provides Openstack metadata that is used by the caller (the
os-services project) to create LXC containers for Nagios and the ELK stack. This is
accomplished by copying environment configuration files to /etc/openstack_deploy/env.d/ and
is performed during the bootstrap phase of os-services installation. The caller, os-services,
uses this information to invoke OpenStack-Ansible playbooks to create LXC containers. During
the os-services create-cluster phase, the corresponding script for OpsMgr
(create-cluster-opsmgr.sh) is then called.

The create-cluster-opsmgr.sh script performs the following steps:

  * execution of "predeploy" Ansible plugin playbooks to integrate OpsMgr with OpenStack-Ansible
    and install and configure plugin extensions (like the ELK stack) on top of the containers
    created in the bootstrap phase
 
  * execution of the mainstream "opsmgr" Ansible playbook to deploy the OpsMgr service and
    dashboards (within the OpenStack Horizon container), completely install the Nagios server
    (also within an OpenstStack container), and configure haproxy and database
 
  * execution of "provisioning" Ansible plugin playbooks to push all necessary configuration to
    the endpoints that are managed by the OpsMgr stack.  For example, to deploy the endpoint
    services for Nagios (NRPE) and the ELK stack (Beaver).

OpsMgr can be easily extended by providing additional "predeploy" and "provisioning" Ansible
plugin playbooks.

The scripts above can be invoked manually to resolve errors, for example, errors related to
network timeout.

The default credentials for the integrated plugin applications are::

    Nagios user: nagios
    Nagios password: nagios
    Kibana user: kibana

When the cluster is deployed by the genesis-cluster project, the default kibana password is
'passw0rd'. When running from os-services or the scripts in this project, the kibana password
can be specified by the KIBANA_PASSWORD environment variable, or it defaults to a randomly
generated value that can be found by looking at /etc/openstack_deploy/user_secrets_opsmgr.yml

It is recommended that these passwords be changed after the initial install completes using the
tools' documented practices.

If a different default value is desired, please set or modify the following Ansible variables
prior to installing OpsMgr:

For Nagios::

    nagios_group: nagios (all configuration for Nagios can be changed by users belonging to
                  this group)
    nagios_user:  nagios
    nagios_pass:  nagios
    Location:     playbooks/roles/nagios/defaults/main.yml (or use standard Ansible override
                  mechanisms: vars, group_vars, extra_vars, etc.)

For ELK::

    kibana_service_user:  kibana
    kibana_service_group: root (similarly to Nagios, this control which users can change
                          Kibana configuration)
    Location:             predeploy/elk/roles/kibana/defaults/main.yml (or use standard Ansible
                          override mechanisms: vars, group_vars, extra_vars, etc.)

Additional OpsMgr deployment default parameters can be overridden as well. For options please check
this file: playbooks/defaults/main.yml

Related projects
----------------
::

    > cluster-genesis
    > os-services
    > ceph-services

OpsMgr
=============

This project installs Nagios, ElasticSearch, Logstash and Kibana (ELK stack), and the OpsMgr 
command line and user interface (as an OpenStack Horizon extension) on the cluster controller
nodes that have been deployed with os-services. Nagios is automatically configured to monitor the
Openstack services running in the cluster. Kibana dashboards are provided to monitor the logs
generated by Openstack and Ceph. In addition OpsMgr is fully extensible via plugins to support
additional open Ops tools (besides Nagios and ELK) and additional types of resources
(besides OpenStack services) in the future.

In a typical Private Cloud scenario each node in the cluster is pre-conditioned by the
cluster-genesis project which provides bare metal operating system installation services
and then it invokes a solution specific service which in this case is provided by the os-services
project. This latter project guides the installation and configuration of Openstack and then
orchestrates the installation of the OpsMgr stack of services for operational management.

The os-services orchestration of OpsMgr is achieved by setting the following variables::

   > export DEPLOY_OPSMGR=yes
   > export ANSIBLE_HOST_KEY_CHECKING=False
     
And then running the following scripts::

   > ./scripts/bootstrap-opsmgr.sh
   > ./scripts/create-cluster-opsmgr.sh 

Those scripts will perform the following sequence of steps:

  * execution of recipes/privatelcoud-newton Ansible playbook that queries OpenStack-Ansible
    and the /var/oprc/inventory.yml file of cluster-genesis for the variables necessary
    for the install of OpsMgr in an Openstack-Ansible controller

  * execution of playbooks/setup.yml Ansible playbook that provisions ssh keys
    to each endpoint managed by OpsMgr 

  * execution of playbooks/hosts.yml Ansible playbook that creates containers for Nagios and
    the ELK stack
  
  * execution of playbooks/site.yml Ansible playbook to deploy the OpsMgr service and dashboards
    (within OpenStack Horizon containers) and completely installs Nagios server and the ELK
    stack and configures haproxy and database
  
  * execution of playbooks/target.yml Ansible playbook to deploy the endpoint services for Nagios (NRPE)
    and ELK (Beaver) and to push all necessary configuration at the endpoints that will be managed
    by the OpsMgr stack

To install OpsMgr with a minimal install of OpenStack to utilize the monitoring features of OpsMgr in a non openstack environment, using an Ubuntu 16.04 VM clone this project and run::

   > ./scripts/bootstrap-opsmgr-min.sh
   > ./scripts/create-cluster-opsmgr-min.sh 

Extensibility for OpsMgr can be easily achieved by providing additional Ansible playbooks. 

The scripts above may be invoked manually to resolve errors, particularly network timeout
related errors.

The default credentials for the integrated Ops applications are::

    Nagios user: nagios
    Nagios password: nagios
    Kibana user: kibana
    Kibana password: kibana

It is recommended that the user changes these passwords after initial install, using these tool's
documented practices.

If a different default value is desired, please set or modify the following Ansible variables prior to installing OpsMgr:

For Nagios::

    nagios_group: nagios (all configuration for Nagios can be changed by users belonging to this group)
    nagios_user:  nagios
    nagios_pass:  nagios
    Location: playbooks/roles/nagios/defaults/main.yml (or use standard Ansible override mechanisms: vars, group_vars, extra_vars, etc.)

For ELK::

    kibana_service_user: kibana
    kibana_password: kibana
    Location: playbooks/roles/kibana/defaults/main.yml (or use standard Ansible override mechanisms: vars, group_vars, extra_vars, etc.)

For the OpsMgr galera database the password is randomly generated and stored in /etc/opsmgr/user_secrets.yml on the deployer node.

Additional OpsMgr deployment default parameters can be overridden as well. For options please check
this file: playbooks/defaults.yml

Uninstall
---------
To uninstall OpsMgr the following can be done:

  * From the deployer node:
      * Run the clean.yml playbook from the playbooks directory to remove the OpsMgr containers
      * Edit the ~/.ssh/config file and remove each Host entry that uses the IdentityFile opsmgr.key
  * From each controller node:
      * Remove the directory /etc/opsmgr
      * From /etc/haproxy/conf.d remove the configuration files for Elasticsearch, Kibana, Logstash and Nagios  
        and restart the haproxy service
  * From each controller node and endpoint being monitored:
      * Use apt purge to remove beaver and nagios-nrpe-server
      * Remove the directories /etc/nagios and /etc/beaver

Bug Reporting
-------------
The current list of bugs can be found on launchpad:
https://bugs.launchpad.net/open-power-ref-design

Related projects
----------------
   - `openstack-recipes <https://github.com/open-power-ref-design/openstack-recipes>`_
   - `cluster-genesis <https://github.com/open-power-ref-design/cluster-genesis>`_
   - `os-services <https://github.com/open-power-ref-design/os-services>`_
   - `ceph-services <https://github.com/open-power-ref-design/ceph-services>`_


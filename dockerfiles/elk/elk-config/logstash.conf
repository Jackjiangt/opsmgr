input {
file {
type => "nova-api"
path => "/elkdata/nova-api.log"
codec => multiline {
pattern => "^%{SPACE}%{TIMESTAMP_ISO8601}"
negate => "true"
what => "previous"
}
start_position => "beginning"
}
file {
type => "nova-compute"
path => "/elkdata/nova-compute.log"
codec => multiline {
pattern => "^%{SPACE}%{TIMESTAMP_ISO8601}"
negate => "true"
what => "previous"
}
start_position => "beginning"
}
file {
type => "nova-conductor"
path => "/elkdata/nova-conductor.log"
codec => multiline {
pattern => "^%{SPACE}%{TIMESTAMP_ISO8601}"
negate => "true"
what => "previous"
}
start_position => "beginning"
}
file {
type => "nova-scheduler"
path => "/elkdata/nova-scheduler.log"
codec => multiline {
pattern => "^%{SPACE}%{TIMESTAMP_ISO8601}"
negate => "true"
what => "previous"
}
start_position => "beginning"
}
file {
type => "neutron-server"
path => "/elkdata/neutron-server.log"
codec => multiline {
pattern => "^%{SPACE}%{TIMESTAMP_ISO8601}"
negate => "true"
what => "previous"
}
start_position => "beginning"
}
file {
type => "neutron-ovs-agent"
path => "/elkdata/neutron-openvswitch-agent.log"
codec => multiline {
pattern => "^%{SPACE}%{TIMESTAMP_ISO8601}"
negate => "true"
what => "previous"
}
start_position => "beginning"
}
file {
type => "neutron-dhcp-agent"
path => "/elkdata/neutron-dhcp-agent.log"
codec => multiline {
pattern => "^%{SPACE}%{TIMESTAMP_ISO8601}"
negate => "true"
what => "previous"
}
start_position => "beginning"
}
file {
type => "neutron-l3-agent"
path => "/elkdata/neutron-l3-agent.log"
codec => multiline {
pattern => "^%{SPACE}%{TIMESTAMP_ISO8601}"
negate => "true"
what => "previous"
}
start_position => "beginning"
}
file {
type => "keystone"
path => "/elkdata/keystone-keystone.log"
codec => multiline {
pattern => "^%{SPACE}%{TIMESTAMP_ISO8601}"
negate => "true"
what => "previous"
}
start_position => "beginning"
}
file {
type => "glance-api"
path => "/elkdata/glance-api.log"
codec => multiline {
pattern => "^%{SPACE}%{TIMESTAMP_ISO8601}"
negate => "true"
what => "previous"
}
start_position => "beginning"
}
file {
type => "glance-registry"
path => "/elkdata/glance-registry.log"
codec => multiline {
pattern => "^%{SPACE}%{TIMESTAMP_ISO8601}"
negate => "true"
what => "previous"
}
start_position => "beginning"
}
file {
type => "glance-api"
path => "/elkdata/glance-api.log"
codec => multiline {
pattern => "^%{SPACE}%{TIMESTAMP_ISO8601}"
negate => "true"
what => "previous"
}
start_position => "beginning"
}
file {
type => "cinder-api"
path => "/elkdata/cinder-api.log"
codec => multiline {
pattern => "^%{SPACE}%{TIMESTAMP_ISO8601}"
negate => "true"
what => "previous"
}
start_position => "beginning"
}
file {
type => "cinder-scheduler"
path => "/elkdata/cinder-scheduler.log"
codec => multiline {
pattern => "^%{SPACE}%{TIMESTAMP_ISO8601}"
negate => "true"
what => "previous"
}
start_position => "beginning"
}
file {
type => "cinder-volume"
path => "/elkdata/cinder-volume"
codec => multiline {
pattern => "^%{SPACE}%{TIMESTAMP_ISO8601}"
negate => "true"
what => "previous"
}
start_position => "beginning"
}
file {
type => "heat-api"
path => "/elkdata/heat-api.log"
codec => multiline {
pattern => "^%{SPACE}%{TIMESTAMP_ISO8601}"
negate => "true"
what => "previous"
}
start_position => "beginning"
}
file {
type => "heat-engine"
path => "/elkdata/heat-engine.log"
codec => multiline {
pattern => "^%{SPACE}%{TIMESTAMP_ISO8601}"
negate => "true"
what => "previous"
}
start_position => "beginning"
}
}
filter {
if [type] == "nova-api" {
grok {
match => { "message" => ["%{SPACE}%{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{NUMBER:process_id}%{SPACE}%{LOGLEVEL:loglevel}%{SPACE}%{USERNAME:issuer}%{GREEDYDATA}%{IP:http_client}%{SPACE}\"%{WORD:http_method}%{SPACE}%{URIPATHPARAM:http_request}%{SPACE}HTTP/%{NUMBER:http_version}\"%{SPACE}status\:%{SPACE}%{NUMBER:http_status}%{SPACE}len:%{SPACE}%{NUMBER:http_bytes:int}%{SPACE}time:%{SPACE}%{NUMBER:http_duration:float}%{SPACE}<%{HOSTNAME:hostname}%{SPACE}%{IP:IP}>", "%{SPACE}%{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{NUMBER:process_id}%{SPACE}%{LOGLEVEL:loglevel}%{SPACE}%{USERNAME:issuer}%{GREEDYDATA:msgbody}<%{HOSTNAME:hostname}%{SPACE}%{IP:IP}>"]}   
}
}
else if [type] == "glance-api" or [type] == "keystone" or [type] == "cinder-api" or [type] == "heat-api"{
grok {
match => { "message" => ["%{SPACE}%{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{NUMBER:process_id}%{SPACE}%{LOGLEVEL:loglevel}%{SPACE}%{USERNAME:issuer}%{GREEDYDATA}%{IP:http_client}%{GREEDYDATA}\"%{WORD:http_method}%{SPACE}%{URIPATHPARAM:http_request}%{SPACE}HTTP/%{NUMBER:http_version}\"%{SPACE}%{NUMBER:http_status}%{SPACE}%{NUMBER:http_bytes:int}%{SPACE}%{NUMBER:http_duration:float}%{SPACE}<%{HOSTNAME:hostname}%{SPACE}%{IP:IP}>", "%{SPACE}%{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{NUMBER:process_id}%{SPACE}%{LOGLEVEL:loglevel}%{SPACE}%{USERNAME:issuer}%{GREEDYDATA:msgbody}<%{HOSTNAME:hostname}%{SPACE}%{IP:IP}>"]} 
}
}
else {
grok {
match => { "message" => ["%{SPACE}%{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{NUMBER:process_id}%{SPACE}%{LOGLEVEL:loglevel}%{SPACE}%{USERNAME:issuer}%{GREEDYDATA:msgbody}<%{HOSTNAME:hostname}%{SPACE}%{IP:IP}>"]}
}
} 
mutate{
remove_field => ["path"]
remove_field => ["host"]
}
}
output {
elasticsearch {
index => "logstash-%{+YYYY.MM.dd}"
hosts => ["127.0.0.1:9200"]
}
}

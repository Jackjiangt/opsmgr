---

    - include_vars: "{{ item }}"
      with_first_found:
        - "../vars/{{ ansible_os_family }}.yml"

    # install pre-reqs

    - name: installs prereq packages
      package:
        name: "{{ item }}"
        state: present
      with_items: "{{ pre_packages }}"
      retries: 5
      delay: 2

    - name: uninstalls nrpe server
      package:
        name: "{{ nrpe }}"
        state: absent
      when: install_server is defined and install_server == true
      retries: 5
      delay: 2

    - name: installs nrpe server
      package:
        name: "{{ nrpe }}"
        state: present
      when: install_server is defined and install_server == true
      retries: 5
      delay: 2

    - name: installs nrpe plugin
      package:
        name: "{{ nrpe_plugins }}"
        state: present
      when: install_plugin is defined and install_plugin == true
      retries: 5
      delay: 2

    - include: debian.yml
      when: ansible_os_family == "Debian"

    - include: rhel.yml
      when: ansible_os_family == "RedHat"

    # create user and group

    - name: create nagios group (if needed)
      group: name={{ nrpe_group }} state=present

    - name: create nagios user (if needed)
      user: name={{ nrpe_user }} groups={{ nrpe_group }}

    # patch nrpe if requested
    - include: patch.yml
      when: patch_nrpe is defined and patch_nrpe == true

    # run the daemon-reload before enabling the service(systemd is fully supported since Ubuntu 15.04).
    # older endpoints needing to be managed may not have sysmctl
    - name: daemon-reload
      shell: systemctl daemon-reload
      ignore_errors: true

    # configures nrpe
    - name: create nrpe.cfg from template
      template: >
        src=nrpe.cfg.j2
        dest={{ nrpe_dir }}/nrpe.cfg
        owner=root group=root mode=0644
      when: install_server is defined and install_server == true
      notify: restart nrpe service


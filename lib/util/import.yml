---
# Copyright 2017, IBM US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

    - name: import dynamic variables from previous run
      include_vars: "{{ item }}"
      with_first_found:
        - "{{ opsmgr_dat }}/lxc-ops.yml"
        - "defaults.yml"

    - name: register opsmgr-created containers into dynamic inventory
      add_host:
          name:                         "{{ item.hostname }}"
          group:                        "opsmgr_{{ item.role }}"
          host:                         "{{ item.host }}"
          address:                      "{{ item.address }}"
          hostaddr:                     "{{ item.hostaddr }}"
          share:                        "/{{ item.mount }}"
          lxc:                          "{{ item }}"
          ansible_user:                 root
          ansible_ssh_private_key_file: "{{ opsmgr_key }}/current/opsmgr.key"
      with_items: "{{ opsmgr_containers }}"
      when: opsmgr_containers is defined

    - name: register opsmgr-created containers into dynamic inventory
      add_host:
          name:                         "{{ item.hostname }}"
          group:                        "opsmgr_containers"
          host:                         "{{ item.host }}"
          address:                      "{{ item.address }}"
          hostaddr:                     "{{ item.hostaddr }}"
          share:                        "/{{ item.mount }}"
          lxc:                          "{{ item }}"
          ansible_user:                 root
          ansible_ssh_private_key_file: "{{ opsmgr_key }}/current/opsmgr.key"
      with_items: "{{ opsmgr_containers }}"
      when: opsmgr_containers is defined

    - name: create /etc/hosts entries for opsmgr-created containers
      lineinfile:
          dest: /etc/hosts
          state: present
          line: "{{ item.address }} {{ item.hostname }}"
      become: true
      with_items: "{{ opsmgr_containers }}"
      when: opsmgr_containers is defined

    - name: import dynamic variables from previous run
      include_vars: "{{ item }}"
      with_first_found:
        - "{{ opsmgr_dat }}/lxc-ext.yml"
        - "defaults.yml"

    - name: register externally-created containers into dynamic inventory
      add_host:
          name:                         "{{ item.hostname }}"
          group:                        "opsmgr_{{ item.role }}"
          host:                         "{{ item.host }}"
          address:                      "{{ item.address }}"
          hostaddr:                     "{{ item.hostaddr }}"
          lxc:                          "{{ item }}"
          imported:                     false
          ansible_user:                 root
          ansible_ssh_private_key_file: "{{ opsmgr_key }}/current/opsmgr.key"
      with_items: "{{ import_containers }}"
      when: import_containers is defined

    - name: register externally-created containers into dynamic inventory
      add_host:
          name:                         "{{ item.hostname }}"
          group:                        "opsmgr_containers"
          host:                         "{{ item.host }}"
          address:                      "{{ item.address }}"
          hostaddr:                     "{{ item.hostaddr }}"
          lxc:                          "{{ item }}"
          imported:                     true
          ansible_user:                 root
          ansible_ssh_private_key_file: "{{ opsmgr_key }}/current/opsmgr.key"
      with_items: "{{ import_containers }}"
      when: import_containers is defined

    - name: create /etc/hosts entries for externally-created containers
      lineinfile:
          dest: /etc/hosts
          state: present
          line: "{{ item.address }} {{ item.hostname }}"
      become: true
      with_items: "{{ import_containers }}"
      when: import_containers is defined

    #For the install without any containers need to manually prime the host
    - name: register opsmgr_core
      add_host:
          name:                         "{{ ansible_hostname }}"
          group:                        "opsmgr_core"
          host:                         "{{ ansible_hostname }}"
          address:                      "{{ floating_ip }}"
          hostaddr:                     "{{ ansible_ssh_host }}"
      when: recipe == "minimal"

    - name: register opsmgr_nagios
      add_host:
          name:                         "{{ ansible_hostname }}"
          group:                        "opsmgr_nagios"
          host:                         "{{ ansible_hostname }}"
          address:                      "{{ floating_ip }}"
          hostaddr:                     "{{ ansible_ssh_host }}"
          share:                        "{{ nagios_config_dir }}"
      when: recipe == "minimal"

